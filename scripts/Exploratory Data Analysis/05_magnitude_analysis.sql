-- ================================================================
-- Magnitude Analysis
-- ================================================================

-- Count the total number of customers in each country.
-- Helps identify key geographic markets based on customer volume.
SELECT
    country,
    COUNT(customer_id) AS customers_count
FROM gold.dim_customer
GROUP BY country
ORDER BY customers_count DESC;

-- Count the total number of customers by gender.
-- Useful for understanding gender distribution across the customer base.
SELECT 
    gender,
    COUNT(customer_id) AS customers_count
FROM gold.dim_customer
GROUP BY gender
ORDER BY customers_count DESC;

-- Count the total number of products available in each category.
-- Gives visibility into product range and inventory scope per category.
SELECT 
    category,
    COUNT(product_name) AS products_count
FROM gold.dim_product
GROUP BY category
ORDER BY products_count DESC;

-- Calculate the average product cost within each category.
-- Provides insight into price positioning by product segment.
SELECT 
    category,
    AVG(cost) AS avg_cost
FROM gold.dim_product
GROUP BY category
ORDER BY avg_cost DESC;

-- Calculate the total revenue contributed by each product category.
-- Helps assess which product lines are generating the most revenue.
SELECT 
    p.category,
    SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_product p ON s.product_key = p.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;

-- Compute the total revenue generated by each customer.
-- Useful for identifying high-value customers and forming loyalty strategies.
SELECT 
    c.customer_key,
    c.first_name,
    c.last_name,
    SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s
LEFT JOIN gold.dim_customer c ON s.customer_key = c.customer_key
GROUP BY c.customer_key, c.first_name, c.last_name
ORDER BY total_revenue DESC;

-- Analyze the distribution of sold items across different countries.
-- Reveals demand concentration and regional sales performance.
SELECT 
    c.country,
    SUM(s.qunatity) AS total_sold_items
FROM gold.fact_sales AS s
LEFT JOIN gold.dim_customer c ON s.customer_key = c.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC;
